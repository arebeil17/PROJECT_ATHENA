`timescale 1ns/1ps
//Author: Generated by yaaaay!! dpgen
module C:\Users\Andres\Documents\GitHub\PROJECT_ATHENA\hlsyn\output\output1(a, b, c, z, x, Clk, Rst, Start, Done);
	input 	[15:0]	a;
	input 	[15:0]	b;
	input 	[15:0]	c;
	output 	reg[7:0]	z;
	output 	reg[15:0]	x;
	reg 	[7:0]	d;
	reg 	[7:0]	e;
	reg 	[7:0]	f;
	reg 	[7:0]	g;
	input 	Clk, Rst, Start;

	output 	reg Done;
	reg [3: 0] State, NextState;

	localparam [3:0] Wait = 0,
					 State_1 = 1,
					 State_2 = 2,
					 State_3 = 3,
					 State_4 = 4,
					 State_5 = 5,
					 State_6 = 6,
					 State_7 = 7,
					 State_8 = 8,
					 State_9 = 9,
					 State_10 = 10,
					 Final = 11;
	always @(State, Start) begin
		case(State)
			Wait:begin
				Done <= 0;
				if(Start)
					NextState <= State_1;
				else
					NextState <= Wait;
			end
			State_1:begin
				NextState <= State_2;
			end
			State_2:begin
				NextState <= State_3;
			end
			State_3:begin
				NextState <= State_4;
			end
			State_4:begin
				NextState <= State_5;
			end
			State_5:begin
				NextState <= State_6;
			end
			State_6:begin
				NextState <= State_7;
			end
			State_7:begin
				NextState <= State_8;
			end
			State_8:begin
				d = a + b;
				e = a + c;
				f = a * c;
				NextState <= State_9;
			end
			State_9:begin
				g = d > e;
				NextState <= State_10;
			end
			State_10:begin
				z = (g) ? d : e;
				x = f - d;
				NextState <= Final;
			end
			Final:begin
				Done <= 1;
				NextState <= Wait;
			end
			default:begin
				NextState <= Wait;
			end
		endcase
	end
	always @(posedge Clk) begin
		if(Rst)
			State <= Wait;
		else
			State <=  NextState;
	end
endmodule